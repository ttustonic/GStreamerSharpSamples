// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst.Sdp {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct MIKEYPayloadKeyData : IEquatable<MIKEYPayloadKeyData> {

		private IntPtr _pt;
		public Gst.Sdp.MIKEYPayload Pt {
			get {
				return _pt == IntPtr.Zero ? null : (Gst.Sdp.MIKEYPayload) GLib.Opaque.GetOpaque (_pt, typeof (Gst.Sdp.MIKEYPayload), false);
			}
			set {
				_pt = value == null ? IntPtr.Zero : value.Handle;
			}
		}
		public Gst.Sdp.MIKEYKeyDataType KeyType;
		public ushort KeyLen;
		private IntPtr _key_data;
		public ushort SaltLen;
		private IntPtr _salt_data;
		public Gst.Sdp.MIKEYKVType KvType;
		[MarshalAs (UnmanagedType.ByValArray, SizeConst=2)]
		public byte[] KvLen;
		[MarshalAs (UnmanagedType.ByValArray, SizeConst=2)]
		public byte[] KvData;

		public static Gst.Sdp.MIKEYPayloadKeyData Zero = new Gst.Sdp.MIKEYPayloadKeyData ();

		public static Gst.Sdp.MIKEYPayloadKeyData New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gst.Sdp.MIKEYPayloadKeyData.Zero;
			return (Gst.Sdp.MIKEYPayloadKeyData) Marshal.PtrToStructure (raw, typeof (Gst.Sdp.MIKEYPayloadKeyData));
		}

		public bool Equals (MIKEYPayloadKeyData other)
		{
			return true && Pt.Equals (other.Pt) && KeyType.Equals (other.KeyType) && KeyLen.Equals (other.KeyLen) && _key_data.Equals (other._key_data) && SaltLen.Equals (other.SaltLen) && _salt_data.Equals (other._salt_data) && KvType.Equals (other.KvType) && KvLen.Equals (other.KvLen) && KvData.Equals (other.KvData);
		}

		public override bool Equals (object other)
		{
			return other is MIKEYPayloadKeyData && Equals ((MIKEYPayloadKeyData) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Pt.GetHashCode () ^ KeyType.GetHashCode () ^ KeyLen.GetHashCode () ^ _key_data.GetHashCode () ^ SaltLen.GetHashCode () ^ _salt_data.GetHashCode () ^ KvType.GetHashCode () ^ KvLen.GetHashCode () ^ KvData.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
