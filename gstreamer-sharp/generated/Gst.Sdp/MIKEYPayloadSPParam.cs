// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst.Sdp {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct MIKEYPayloadSPParam : IEquatable<MIKEYPayloadSPParam> {

		public byte Type;
		public byte Len;
		private IntPtr _val;

		public static Gst.Sdp.MIKEYPayloadSPParam Zero = new Gst.Sdp.MIKEYPayloadSPParam ();

		public static Gst.Sdp.MIKEYPayloadSPParam New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gst.Sdp.MIKEYPayloadSPParam.Zero;
			return (Gst.Sdp.MIKEYPayloadSPParam) Marshal.PtrToStructure (raw, typeof (Gst.Sdp.MIKEYPayloadSPParam));
		}

		public bool Equals (MIKEYPayloadSPParam other)
		{
			return true && Type.Equals (other.Type) && Len.Equals (other.Len) && _val.Equals (other._val);
		}

		public override bool Equals (object other)
		{
			return other is MIKEYPayloadSPParam && Equals ((MIKEYPayloadSPParam) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Type.GetHashCode () ^ Len.GetHashCode () ^ _val.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
