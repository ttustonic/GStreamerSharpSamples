// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst.Sdp {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDPKey : IEquatable<SDPKey> {

		public string Type;
		public string Data;

		public static Gst.Sdp.SDPKey Zero = new Gst.Sdp.SDPKey ();

		public static Gst.Sdp.SDPKey New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gst.Sdp.SDPKey.Zero;
			return (Gst.Sdp.SDPKey) Marshal.PtrToStructure (raw, typeof (Gst.Sdp.SDPKey));
		}

		public bool Equals (SDPKey other)
		{
			return true && Type.Equals (other.Type) && Data.Equals (other.Data);
		}

		public override bool Equals (object other)
		{
			return other is SDPKey && Equals ((SDPKey) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Type.GetHashCode () ^ Data.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
