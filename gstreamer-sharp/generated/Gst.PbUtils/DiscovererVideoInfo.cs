// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst.PbUtils {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class DiscovererVideoInfo : Gst.PbUtils.DiscovererStreamInfo {

		public DiscovererVideoInfo (IntPtr raw) : base(raw) {}

		protected DiscovererVideoInfo() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}

		[DllImport("libgstpbutils-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gst_discoverer_video_info_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = gst_discoverer_video_info_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("libgstpbutils-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern uint gst_discoverer_video_info_get_bitrate(IntPtr raw);

		public uint Bitrate { 
			get {
				uint raw_ret = gst_discoverer_video_info_get_bitrate(Handle);
				uint ret = raw_ret;
				return ret;
			}
		}

		[DllImport("libgstpbutils-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern uint gst_discoverer_video_info_get_depth(IntPtr raw);

		public uint Depth { 
			get {
				uint raw_ret = gst_discoverer_video_info_get_depth(Handle);
				uint ret = raw_ret;
				return ret;
			}
		}

		[DllImport("libgstpbutils-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern uint gst_discoverer_video_info_get_framerate_denom(IntPtr raw);

		public uint FramerateDenom { 
			get {
				uint raw_ret = gst_discoverer_video_info_get_framerate_denom(Handle);
				uint ret = raw_ret;
				return ret;
			}
		}

		[DllImport("libgstpbutils-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern uint gst_discoverer_video_info_get_framerate_num(IntPtr raw);

		public uint FramerateNum { 
			get {
				uint raw_ret = gst_discoverer_video_info_get_framerate_num(Handle);
				uint ret = raw_ret;
				return ret;
			}
		}

		[DllImport("libgstpbutils-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern uint gst_discoverer_video_info_get_height(IntPtr raw);

		public uint Height { 
			get {
				uint raw_ret = gst_discoverer_video_info_get_height(Handle);
				uint ret = raw_ret;
				return ret;
			}
		}

		[DllImport("libgstpbutils-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern uint gst_discoverer_video_info_get_max_bitrate(IntPtr raw);

		public uint MaxBitrate { 
			get {
				uint raw_ret = gst_discoverer_video_info_get_max_bitrate(Handle);
				uint ret = raw_ret;
				return ret;
			}
		}

		[DllImport("libgstpbutils-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern uint gst_discoverer_video_info_get_par_denom(IntPtr raw);

		public uint ParDenom { 
			get {
				uint raw_ret = gst_discoverer_video_info_get_par_denom(Handle);
				uint ret = raw_ret;
				return ret;
			}
		}

		[DllImport("libgstpbutils-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern uint gst_discoverer_video_info_get_par_num(IntPtr raw);

		public uint ParNum { 
			get {
				uint raw_ret = gst_discoverer_video_info_get_par_num(Handle);
				uint ret = raw_ret;
				return ret;
			}
		}

		[DllImport("libgstpbutils-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern uint gst_discoverer_video_info_get_width(IntPtr raw);

		public uint Width { 
			get {
				uint raw_ret = gst_discoverer_video_info_get_width(Handle);
				uint ret = raw_ret;
				return ret;
			}
		}

		[DllImport("libgstpbutils-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gst_discoverer_video_info_is_image(IntPtr raw);

		public bool IsImage { 
			get {
				bool raw_ret = gst_discoverer_video_info_is_image(Handle);
				bool ret = raw_ret;
				return ret;
			}
		}

		[DllImport("libgstpbutils-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gst_discoverer_video_info_is_interlaced(IntPtr raw);

		public bool IsInterlaced { 
			get {
				bool raw_ret = gst_discoverer_video_info_is_interlaced(Handle);
				bool ret = raw_ret;
				return ret;
			}
		}


		static DiscovererVideoInfo ()
		{
			GtkSharp.GstreamerSharp.ObjectManager.Initialize ();
		}
#endregion
	}
}
