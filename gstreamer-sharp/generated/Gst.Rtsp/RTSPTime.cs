// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst.Rtsp {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct RTSPTime : IEquatable<RTSPTime> {

		public Gst.Rtsp.RTSPTimeType Type;
		public double Seconds;

		public static Gst.Rtsp.RTSPTime Zero = new Gst.Rtsp.RTSPTime ();

		public static Gst.Rtsp.RTSPTime New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gst.Rtsp.RTSPTime.Zero;
			return (Gst.Rtsp.RTSPTime) Marshal.PtrToStructure (raw, typeof (Gst.Rtsp.RTSPTime));
		}

		public bool Equals (RTSPTime other)
		{
			return true && Type.Equals (other.Type) && Seconds.Equals (other.Seconds);
		}

		public override bool Equals (object other)
		{
			return other is RTSPTime && Equals ((RTSPTime) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Type.GetHashCode () ^ Seconds.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
