// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst.Controller {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class ARGBControlBinding : Gst.ControlBinding {

		public ARGBControlBinding (IntPtr raw) : base(raw) {}

		[DllImport("libgstcontroller-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gst_argb_control_binding_new(IntPtr _object, IntPtr property_name, IntPtr cs_a, IntPtr cs_r, IntPtr cs_g, IntPtr cs_b);

		public ARGBControlBinding (Gst.Object _object, string property_name, Gst.ControlSource cs_a, Gst.ControlSource cs_r, Gst.ControlSource cs_g, Gst.ControlSource cs_b) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (ARGBControlBinding)) {
				var vals = new List<GLib.Value> ();
				var names = new List<string> ();
				if (_object != null) {
					names.Add ("_object");
					vals.Add (new GLib.Value (_object));
				}
				CreateNativeObject (names.ToArray (), vals.ToArray ());
				return;
			}
			IntPtr native_property_name = GLib.Marshaller.StringToPtrGStrdup (property_name);
			Raw = gst_argb_control_binding_new(_object == null ? IntPtr.Zero : _object.Handle, native_property_name, cs_a == null ? IntPtr.Zero : cs_a.Handle, cs_r == null ? IntPtr.Zero : cs_r.Handle, cs_g == null ? IntPtr.Zero : cs_g.Handle, cs_b == null ? IntPtr.Zero : cs_b.Handle);
			GLib.Marshaller.Free (native_property_name);
		}

		[GLib.Property ("control-source-a")]
		public Gst.ControlSource ControlSourceA {
			get {
				GLib.Value val = GetProperty ("control-source-a");
				Gst.ControlSource ret = (Gst.ControlSource) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("control-source-a", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("control-source-b")]
		public Gst.ControlSource ControlSourceB {
			get {
				GLib.Value val = GetProperty ("control-source-b");
				Gst.ControlSource ret = (Gst.ControlSource) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("control-source-b", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("control-source-g")]
		public Gst.ControlSource ControlSourceG {
			get {
				GLib.Value val = GetProperty ("control-source-g");
				Gst.ControlSource ret = (Gst.ControlSource) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("control-source-g", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("control-source-r")]
		public Gst.ControlSource ControlSourceR {
			get {
				GLib.Value val = GetProperty ("control-source-r");
				Gst.ControlSource ret = (Gst.ControlSource) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("control-source-r", val);
				val.Dispose ();
			}
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _class_abi = null;
		static public new GLib.AbiStruct class_abi {
			get {
				if (_class_abi == null)
					_class_abi = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("_gst_reserved"
							, Gst.ControlBinding.class_abi.Fields
							, (uint) Marshal.SizeOf(typeof(IntPtr)) * 4 // _gst_reserved
							, null
							, null
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
					});

				return _class_abi;
			}
		}


		// End of the ABI representation.

		[DllImport("libgstcontroller-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gst_argb_control_binding_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = gst_argb_control_binding_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}


		static ARGBControlBinding ()
		{
			GtkSharp.GstreamerSharp.ObjectManager.Initialize ();
		}

		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _abi_info = null;
		static public new GLib.AbiStruct abi_info {
			get {
				if (_abi_info == null)
					_abi_info = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("cs_a"
							, Gst.ControlBinding.abi_info.Fields
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // cs_a
							, null
							, "cs_r"
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
						new GLib.AbiField("cs_r"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // cs_r
							, "cs_a"
							, "cs_g"
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
						new GLib.AbiField("cs_g"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // cs_g
							, "cs_r"
							, "cs_b"
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
						new GLib.AbiField("cs_b"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // cs_b
							, "cs_g"
							, "cur_value"
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
						new GLib.AbiField("cur_value"
							, -1
							, (uint) Marshal.SizeOf(typeof(GLib.Value)) // cur_value
							, "cs_b"
							, "last_value"
							, (long) Marshal.OffsetOf(typeof(GstARGBControlBinding_cur_valueAlign), "cur_value")
							, 0
							),
						new GLib.AbiField("last_value"
							, -1
							, (uint) Marshal.SizeOf(typeof(uint)) // last_value
							, "cur_value"
							, "_gst_reserved"
							, (long) Marshal.OffsetOf(typeof(GstARGBControlBinding_last_valueAlign), "last_value")
							, 0
							),
						new GLib.AbiField("_gst_reserved"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) * 4 // _gst_reserved
							, "last_value"
							, null
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
					});

				return _abi_info;
			}
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct GstARGBControlBinding_cur_valueAlign
		{
			sbyte f1;
			private GLib.Value cur_value;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct GstARGBControlBinding_last_valueAlign
		{
			sbyte f1;
			private uint last_value;
		}


		// End of the ABI representation.

#endregion
	}
}
