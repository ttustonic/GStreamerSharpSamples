// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct FormatDefinition : IEquatable<FormatDefinition> {

		public Gst.Format Value;
		public string Nick;
		public string Description;
		public uint Quark;

		public static Gst.FormatDefinition Zero = new Gst.FormatDefinition ();

		public static Gst.FormatDefinition New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gst.FormatDefinition.Zero;
			return (Gst.FormatDefinition) Marshal.PtrToStructure (raw, typeof (Gst.FormatDefinition));
		}

		public bool Equals (FormatDefinition other)
		{
			return true && Value.Equals (other.Value) && Nick.Equals (other.Nick) && Description.Equals (other.Description) && Quark.Equals (other.Quark);
		}

		public override bool Equals (object other)
		{
			return other is FormatDefinition && Equals ((FormatDefinition) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Value.GetHashCode () ^ Nick.GetHashCode () ^ Description.GetHashCode () ^ Quark.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
