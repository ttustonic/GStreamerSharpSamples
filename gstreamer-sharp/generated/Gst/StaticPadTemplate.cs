// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct StaticPadTemplate : IEquatable<StaticPadTemplate> {

		public string NameTemplate;
		public Gst.PadDirection Direction;
		public Gst.PadPresence Presence;
		public Gst.StaticCaps StaticCaps;

		public static Gst.StaticPadTemplate Zero = new Gst.StaticPadTemplate ();

		public static Gst.StaticPadTemplate New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gst.StaticPadTemplate.Zero;
			return (Gst.StaticPadTemplate) Marshal.PtrToStructure (raw, typeof (Gst.StaticPadTemplate));
		}

		[DllImport("libgstreamer-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gst_static_pad_template_get(IntPtr raw);

		public Gst.PadTemplate Get() {
			IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf (this));
			System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
			IntPtr raw_ret = gst_static_pad_template_get(this_as_native);
			Gst.PadTemplate ret = GLib.Object.GetObject(raw_ret) as Gst.PadTemplate;
			ReadNative (this_as_native, ref this);
			System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
			return ret;
		}

		[DllImport("libgstreamer-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gst_static_pad_template_get_caps(IntPtr raw);

		public Gst.Caps Caps { 
			get {
				IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf (this));
				System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
				IntPtr raw_ret = gst_static_pad_template_get_caps(this_as_native);
				Gst.Caps ret = raw_ret == IntPtr.Zero ? null : (Gst.Caps) GLib.Opaque.GetOpaque (raw_ret, typeof (Gst.Caps), true);
				ReadNative (this_as_native, ref this);
				System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
				return ret;
			}
		}

		static void ReadNative (IntPtr native, ref Gst.StaticPadTemplate target)
		{
			target = New (native);
		}

		public bool Equals (StaticPadTemplate other)
		{
			return true && NameTemplate.Equals (other.NameTemplate) && Direction.Equals (other.Direction) && Presence.Equals (other.Presence) && StaticCaps.Equals (other.StaticCaps);
		}

		public override bool Equals (object other)
		{
			return other is StaticPadTemplate && Equals ((StaticPadTemplate) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ NameTemplate.GetHashCode () ^ Direction.GetHashCode () ^ Presence.GetHashCode () ^ StaticCaps.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
