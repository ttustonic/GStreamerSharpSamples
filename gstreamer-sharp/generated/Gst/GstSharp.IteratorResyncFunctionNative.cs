// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GstSharp {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate void IteratorResyncFunctionNative(IntPtr it);

	internal class IteratorResyncFunctionInvoker {

		IteratorResyncFunctionNative native_cb;
		IntPtr __data;
		GLib.DestroyNotify __notify;

		~IteratorResyncFunctionInvoker ()
		{
			if (__notify == null)
				return;
			__notify (__data);
		}

		internal IteratorResyncFunctionInvoker (IteratorResyncFunctionNative native_cb) : this (native_cb, IntPtr.Zero, null) {}

		internal IteratorResyncFunctionInvoker (IteratorResyncFunctionNative native_cb, IntPtr data) : this (native_cb, data, null) {}

		internal IteratorResyncFunctionInvoker (IteratorResyncFunctionNative native_cb, IntPtr data, GLib.DestroyNotify notify)
		{
			this.native_cb = native_cb;
			__data = data;
			__notify = notify;
		}

		internal Gst.IteratorResyncFunction Handler {
			get {
				return new Gst.IteratorResyncFunction(InvokeNative);
			}
		}

		void InvokeNative (Gst.Iterator it)
		{
			native_cb (it == null ? IntPtr.Zero : it.Handle);
		}
	}

	internal class IteratorResyncFunctionWrapper {

		public void NativeCallback (IntPtr it)
		{
			try {
				managed (it == IntPtr.Zero ? null : (Gst.Iterator) GLib.Opaque.GetOpaque (it, typeof (Gst.Iterator), false));
				if (release_on_call)
					gch.Free ();
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}

		bool release_on_call = false;
		GCHandle gch;

		public void PersistUntilCalled ()
		{
			release_on_call = true;
			gch = GCHandle.Alloc (this);
		}

		internal IteratorResyncFunctionNative NativeDelegate;
		Gst.IteratorResyncFunction managed;

		public IteratorResyncFunctionWrapper (Gst.IteratorResyncFunction managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new IteratorResyncFunctionNative (NativeCallback);
		}

		public static Gst.IteratorResyncFunction GetManagedDelegate (IteratorResyncFunctionNative native)
		{
			if (native == null)
				return null;
			IteratorResyncFunctionWrapper wrapper = (IteratorResyncFunctionWrapper) native.Target;
			if (wrapper == null)
				return null;
			return wrapper.managed;
		}
	}
#endregion
}
