// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct MetaTransformCopy : IEquatable<MetaTransformCopy> {

		public bool Region;
		private UIntPtr offset;
		public ulong Offset {
			get {
				return (ulong) offset;
			}
			set {
				offset = new UIntPtr (value);
			}
		}
		private UIntPtr size;
		public ulong Size {
			get {
				return (ulong) size;
			}
			set {
				size = new UIntPtr (value);
			}
		}

		public static Gst.MetaTransformCopy Zero = new Gst.MetaTransformCopy ();

		public static Gst.MetaTransformCopy New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gst.MetaTransformCopy.Zero;
			return (Gst.MetaTransformCopy) Marshal.PtrToStructure (raw, typeof (Gst.MetaTransformCopy));
		}

		public bool Equals (MetaTransformCopy other)
		{
			return true && Region.Equals (other.Region) && Offset.Equals (other.Offset) && Size.Equals (other.Size);
		}

		public override bool Equals (object other)
		{
			return other is MetaTransformCopy && Equals ((MetaTransformCopy) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Region.GetHashCode () ^ Offset.GetHashCode () ^ Size.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
