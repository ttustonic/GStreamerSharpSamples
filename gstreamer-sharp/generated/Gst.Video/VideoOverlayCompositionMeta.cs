// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst.Video {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VideoOverlayCompositionMeta : IEquatable<VideoOverlayCompositionMeta> {

		public Gst.Meta Meta;
		private IntPtr _overlay;

		public Gst.Video.VideoOverlayComposition overlay {
			get { return Gst.Video.VideoOverlayComposition.New (_overlay); }
		}

		public static Gst.Video.VideoOverlayCompositionMeta Zero = new Gst.Video.VideoOverlayCompositionMeta ();

		public static Gst.Video.VideoOverlayCompositionMeta New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gst.Video.VideoOverlayCompositionMeta.Zero;
			return (Gst.Video.VideoOverlayCompositionMeta) Marshal.PtrToStructure (raw, typeof (Gst.Video.VideoOverlayCompositionMeta));
		}

		[DllImport("libgstvideo-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gst_video_overlay_composition_meta_get_info();

		public static Gst.MetaInfo Info { 
			get {
				IntPtr raw_ret = gst_video_overlay_composition_meta_get_info();
				Gst.MetaInfo ret = Gst.MetaInfo.New (raw_ret);
				return ret;
			}
		}

		public bool Equals (VideoOverlayCompositionMeta other)
		{
			return true && Meta.Equals (other.Meta) && overlay.Equals (other.overlay);
		}

		public override bool Equals (object other)
		{
			return other is VideoOverlayCompositionMeta && Equals ((VideoOverlayCompositionMeta) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Meta.GetHashCode () ^ overlay.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
