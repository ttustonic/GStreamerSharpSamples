// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst.Video {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VideoColorPrimariesInfo : IEquatable<VideoColorPrimariesInfo> {

		public Gst.Video.VideoColorPrimaries Primaries;
		public double Wx;
		public double Wy;
		public double Rx;
		public double Ry;
		public double Gx;
		public double Gy;
		public double Bx;
		public double By;

		public static Gst.Video.VideoColorPrimariesInfo Zero = new Gst.Video.VideoColorPrimariesInfo ();

		public static Gst.Video.VideoColorPrimariesInfo New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gst.Video.VideoColorPrimariesInfo.Zero;
			return (Gst.Video.VideoColorPrimariesInfo) Marshal.PtrToStructure (raw, typeof (Gst.Video.VideoColorPrimariesInfo));
		}

		public bool Equals (VideoColorPrimariesInfo other)
		{
			return true && Primaries.Equals (other.Primaries) && Wx.Equals (other.Wx) && Wy.Equals (other.Wy) && Rx.Equals (other.Rx) && Ry.Equals (other.Ry) && Gx.Equals (other.Gx) && Gy.Equals (other.Gy) && Bx.Equals (other.Bx) && By.Equals (other.By);
		}

		public override bool Equals (object other)
		{
			return other is VideoColorPrimariesInfo && Equals ((VideoColorPrimariesInfo) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Primaries.GetHashCode () ^ Wx.GetHashCode () ^ Wy.GetHashCode () ^ Rx.GetHashCode () ^ Ry.GetHashCode () ^ Gx.GetHashCode () ^ Gy.GetHashCode () ^ Bx.GetHashCode () ^ By.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
