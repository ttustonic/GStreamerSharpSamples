// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst.FFT {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct FFTF64Complex : IEquatable<FFTF64Complex> {

		public double R;
		public double I;

		public static Gst.FFT.FFTF64Complex Zero = new Gst.FFT.FFTF64Complex ();

		public static Gst.FFT.FFTF64Complex New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gst.FFT.FFTF64Complex.Zero;
			return (Gst.FFT.FFTF64Complex) Marshal.PtrToStructure (raw, typeof (Gst.FFT.FFTF64Complex));
		}

		public bool Equals (FFTF64Complex other)
		{
			return true && R.Equals (other.R) && I.Equals (other.I);
		}

		public override bool Equals (object other)
		{
			return other is FFTF64Complex && Equals ((FFTF64Complex) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ R.GetHashCode () ^ I.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
