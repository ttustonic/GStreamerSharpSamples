// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst.Base {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct FlowCombiner : IEquatable<FlowCombiner> {


		public static Gst.Base.FlowCombiner Zero = new Gst.Base.FlowCombiner ();

		public static Gst.Base.FlowCombiner New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gst.Base.FlowCombiner.Zero;
			return (Gst.Base.FlowCombiner) Marshal.PtrToStructure (raw, typeof (Gst.Base.FlowCombiner));
		}

		[DllImport("libgstbase-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gst_flow_combiner_new();

		public static FlowCombiner New()
		{
			FlowCombiner result = FlowCombiner.New (gst_flow_combiner_new());
			return result;
		}

		[DllImport("libgstbase-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gst_flow_combiner_get_type();

		public static GLib.GType GType { 
			get {
				IntPtr raw_ret = gst_flow_combiner_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("libgstbase-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void gst_flow_combiner_add_pad(IntPtr raw, IntPtr pad);

		public void AddPad(Gst.Pad pad) {
			IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf (this));
			System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
			gst_flow_combiner_add_pad(this_as_native, pad == null ? IntPtr.Zero : pad.Handle);
			ReadNative (this_as_native, ref this);
			System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
		}

		[DllImport("libgstbase-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void gst_flow_combiner_clear(IntPtr raw);

		public void Clear() {
			IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf (this));
			System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
			gst_flow_combiner_clear(this_as_native);
			ReadNative (this_as_native, ref this);
			System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
		}

		[DllImport("libgstbase-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gst_flow_combiner_ref(IntPtr raw);

		public Gst.Base.FlowCombiner Ref() {
			IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf (this));
			System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
			IntPtr raw_ret = gst_flow_combiner_ref(this_as_native);
			Gst.Base.FlowCombiner ret = Gst.Base.FlowCombiner.New (raw_ret);
			ReadNative (this_as_native, ref this);
			System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
			return ret;
		}

		[DllImport("libgstbase-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void gst_flow_combiner_remove_pad(IntPtr raw, IntPtr pad);

		public void RemovePad(Gst.Pad pad) {
			IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf (this));
			System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
			gst_flow_combiner_remove_pad(this_as_native, pad == null ? IntPtr.Zero : pad.Handle);
			ReadNative (this_as_native, ref this);
			System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
		}

		[DllImport("libgstbase-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void gst_flow_combiner_reset(IntPtr raw);

		public void Reset() {
			IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf (this));
			System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
			gst_flow_combiner_reset(this_as_native);
			ReadNative (this_as_native, ref this);
			System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
		}

		[DllImport("libgstbase-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void gst_flow_combiner_unref(IntPtr raw);

		public void Unref() {
			IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf (this));
			System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
			gst_flow_combiner_unref(this_as_native);
			ReadNative (this_as_native, ref this);
			System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
		}

		[DllImport("libgstbase-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern int gst_flow_combiner_update_flow(IntPtr raw, int fret);

		public Gst.FlowReturn UpdateFlow(Gst.FlowReturn fret) {
			IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf (this));
			System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
			int raw_ret = gst_flow_combiner_update_flow(this_as_native, (int) fret);
			Gst.FlowReturn ret = (Gst.FlowReturn) raw_ret;
			ReadNative (this_as_native, ref this);
			System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
			return ret;
		}

		[DllImport("libgstbase-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern int gst_flow_combiner_update_pad_flow(IntPtr raw, IntPtr pad, int fret);

		public Gst.FlowReturn UpdatePadFlow(Gst.Pad pad, Gst.FlowReturn fret) {
			IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf (this));
			System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
			int raw_ret = gst_flow_combiner_update_pad_flow(this_as_native, pad == null ? IntPtr.Zero : pad.Handle, (int) fret);
			Gst.FlowReturn ret = (Gst.FlowReturn) raw_ret;
			ReadNative (this_as_native, ref this);
			System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
			return ret;
		}

		static void ReadNative (IntPtr native, ref Gst.Base.FlowCombiner target)
		{
			target = New (native);
		}

		public bool Equals (FlowCombiner other)
		{
			return true;
		}

		public override bool Equals (object other)
		{
			return other is FlowCombiner && Equals ((FlowCombiner) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode ();
		}

		public static explicit operator GLib.Value (Gst.Base.FlowCombiner boxed)
		{
			GLib.Value val = GLib.Value.Empty;
			val.Init (Gst.Base.FlowCombiner.GType);
			val.Val = boxed;
			return val;
		}

		public static explicit operator Gst.Base.FlowCombiner (GLib.Value val)
		{
			return (Gst.Base.FlowCombiner) val.Val;
		}
#endregion
	}
}
